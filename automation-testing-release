#!/bin/bash

PARENT_PROJECT_PATH="$(pwd)"
SCRIPT_PARAMS="$@"
SKIP_PRINT_CONFIG=true
REPORT_REPO="https://$GITHUB_USERNAME:$GITHUB_TOKEN_ADMIN@github.com/aem-design/aemdesign-aem-support-output.git"
REPORT_REPO_NAME="aemdesign-aem-support-output"
REPORT_DIR="remote-seleniumhub-chrome"
REPORT_CONTENT="./generated-docs"

source "./scripts/functions.sh"

# check if git variables are set
if [[ ${GITHUB_USERNAME} == "" || ${GITHUB_TOKEN_ADMIN} == "" ]]; then
    echo PLEASE SET GITHUB_USERNAME AND GITHUB_TOKEN_ADMIN VARIABLES
    exit 1
fi

# check if report locaton has been set
if [[ ${REPORT_REPO} == "" || ${REPORT_REPO_NAME} == "" ]]; then
    echo PLEASE SET REPORT_REPO AND REPORT_REPO_NAME VARIABLES
    exit 1
fi

# check if git variables are set
if [[ ${TEST_REPORT_OUTPUT} == "" || ${REPORT_DIR} == "" || ${TEST_REPORT_GHPAGES_PATH} == "" ]]; then
    echo PLEASE SET TEST_REPORT_OUTPUT, REPORT_DIR AND TEST_REPORT_GHPAGES_PATH VARIABLE
    exit 1
fi

# get output repo into which publish the reports
cd ${TEST_REPORT_GHPAGES_PATH}
git clone ${REPORT_REPO}

echo SWITCH TO GH-PAGES BRANCH
cd ${REPORT_REPO_NAME}

OUTPUT_DEST="$(pwd)"
echo OUTPUT_DEST: ${OUTPUT_DEST}

echo CHECKOUT GH-PAGES
git checkout gh-pages

# copy result reports
echo COPY UPDATED RESULTS
echo COPY: "${TEST_REPORT_OUTPUT}"
echo TO: "${OUTPUT_DEST}"
cp -Rv "${TEST_REPORT_OUTPUT}" "${OUTPUT_DEST}"

# add any files bigger than 100mb to gitlfs
find ${REPORT_CONTENT}  -size +100000k -exec git lfs track {} \;

# commit and push result reports
echo COMMIT AND PUSH UPDATES
git add .
git commit -a -m "update reports <a href='https://github.com/aem-design/aemdesign-aem-support/commit/${TEST_REPORT_COMMENT}'>${TEST_REPORT_COMMENT}</a>"
git push ${REPORT_REPO} gh-pages
