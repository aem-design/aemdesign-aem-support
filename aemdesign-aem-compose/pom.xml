<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- ====================================================================== -->
  <!-- P A R E N T    P R O J E C T    D E S C R I P T I O N                  -->
  <!-- ====================================================================== -->
  <parent>
    <groupId>design.aem</groupId>
    <artifactId>aemdesign-aem-support</artifactId>
    <version>2.0.10</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <!-- ====================================================================== -->
  <!-- P R O J E C T    D E S C R I P T I O N                                 -->
  <!-- ====================================================================== -->

  <artifactId>aemdesign-aem-compose</artifactId>
  <packaging>content-package</packaging>
  <name>AEM Design - Support - Compose</name>
  <description>Showcase and Styleguide for AEM Design project</description>
  <version>2.0.10</version>

  <properties>
    <sonar.sources>source,pom.xml</sonar.sources>
    <!--<sonar.skip>true</sonar.skip>-->
    <nodeVersion>v8.15.0</nodeVersion>
    <npmVersion>6.4.1</npmVersion>
    <yarnVersion>v1.13.0</yarnVersion>
    <npmCommand>aem:build</npmCommand>
    <generated.content>content-generator/content</generated.content>
    <package.path.apps>apps</package.path.apps>
    <package.appsPath>aemdesign-compose</package.appsPath>
	<package.appFolder>apps/aemdesign-compose</package.appFolder>
	<package.tagNamespace.core>aemdesign</package.tagNamespace.core>
	<package.tagNamespace.showcase>aemdesign-showcase</package.tagNamespace.showcase>
	<package.npmCommand>aem:build</package.npmCommand>
  </properties>


  <developers>
    <developer>
      <email>max.barrass@gmail.com</email>
      <name>Max Barrass</name>
    </developer>
  </developers>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>LATEST_VERSION</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

	<build>
		<resources>
			<!-- define the resources that will go into the package -->
			<resource>
				<directory>.maven/content/jcr_root</directory>
				<filtering>false</filtering>
				<excludes>
					<!-- exclude .vlt control files in the package -->
					<exclude>**/.vlt</exclude>
					<exclude>**/.vltignore</exclude>
					<exclude>**/.gitignore</exclude>
					<exclude>**/*.iml</exclude>
					<exclude>**/.classpath</exclude>
					<exclude>**/.project</exclude>
					<exclude>**/.settings</exclude>
					<exclude>**/.DS_Store</exclude>
					<exclude>**/target/**</exclude>
					<exclude>**/pom.xml</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<configuration>
					<includeEmptyDirs>true</includeEmptyDirs>
				</configuration>
				<executions>
					<execution>
						<id>copy-metainf-vault-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/vault-work/META-INF</outputDirectory>
							<resources>
								<resource>
									<directory>.maven/content/META-INF</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-content-generator-content-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/</outputDirectory>
							<resources>
								<resource>
									<directory>content-generator/content</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>autoInstallPackage</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>content-package-maven-plugin</artifactId>
						<groupId>com.day.jcr.vault</groupId>
						<executions>
							<execution>
								<id>install-content-package</id>
								<phase>install</phase>
								<goals>
									<goal>install</goal>
								</goals>
								<configuration>
									<targetURL>
										${package.uploadProtocol}://${crx.host}:${crx.port}/crx/packmgr/service.jsp
									</targetURL>
									<userId>${crx.username}</userId>
									<password>${crx.password}</password>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploymentpackage</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>clean-content-generator</id>
								<phase>initialize</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<filesets>
										<fileset>
											<directory>${basedir}/content-generator/content</directory>
											<includes>
												<include>**</include>
											</includes>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>frontend-maven-plugin</artifactId>
						<groupId>com.github.eirslett</groupId>
						<version>1.6</version>
						<configuration>
							<nodeVersion>${nodeVersion}</nodeVersion>
							<npmVersion>${npmVersion}</npmVersion>
							<yarnVersion>${yarnVersion}</yarnVersion>
						</configuration>
						<executions>
							<execution>
								<id>exec-install-node-and-npm</id>
								<phase>initialize</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>exec-install-node-and-yarn</id>
								<phase>initialize</phase>

								<goals>
									<goal>install-node-and-yarn</goal>
								</goals>
							</execution>
							<execution>
								<id>exec-yarn-install</id>
								<phase>initialize</phase>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Core -->
		<profile>
			<id>buildCore</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<nodeVersion>${nodeVersion}</nodeVersion>
							<npmVersion>${npmVersion}</npmVersion>
							<yarnVersion>${yarnVersion}</yarnVersion>
						</configuration>
						<executions>
							<execution>
								<id>exec-aem-build-core</id>
								<phase>initialize</phase>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<arguments>${package.npmCommand} --env.project=core --env.maven --env.clean</arguments>
								</configuration>
							</execution>
							<execution>
								<id>exec-aem-generate-tags-core</id>
								<phase>initialize</phase>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<arguments>- -stack_size=8192</arguments>
									<arguments>run aem:generatetags --no-clean --no-console --config=core.yml</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<!-- ensure that the empty directories are copied -->
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
						<executions>
							<execution>
								<id>copy-header-vault-resources-core</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/${package.appFolder}/clientlibs/core/clientlibs-header</outputDirectory>
									<resources>
										<resource>
											<directory>public/core/clientlibs-header</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-footer-vault-resources-core</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/${package.appFolder}/clientlibs/core/clientlibs-footer</outputDirectory>
									<resources>
										<resource>
											<directory>public/core/clientlibs-footer</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.day.jcr.vault</groupId>
						<artifactId>content-package-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<verbose>false</verbose>
							<failOnError>true</failOnError>
							<group>${package.group}</group>
							<properties>
								<acHandling>merge_preserve</acHandling>
								<created>${buildNumber}</created>
								<createdBy>${package.createdBy}</createdBy>
								<description>${project.description}</description>
							</properties>
							<filters combine.children="append">
								<filter>
									<root>/${package.appFolder}/clientlibs/core</root>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/content-type</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-topic</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-style-theme</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-style-modifier</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-style-module</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-style-chevron</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-style-icon</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-dialog</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-aria</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.core}/component-analytics</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/content-type</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-topic</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-style-theme</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-style-modifier</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-style-module</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-style-chevron</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-style-icon</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-dialog</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-aria</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>${package.tagPath}/${package.tagNamespace.showcase}/component-analytics</root>
									<mode>update</mode>
								</filter>
							</filters>

							<subPackages>
								<subPackage>
									<type>zip</type>
									<filter>true</filter>
								</subPackage>
							</subPackages>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Styleguide -->
		<profile>
			<id>buildStyleguide</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<nodeVersion>${nodeVersion}</nodeVersion>
							<npmVersion>${npmVersion}</npmVersion>
							<yarnVersion>${yarnVersion}</yarnVersion>
						</configuration>
						<executions>
							<execution>
								<id>exec-aem-build-styleguide</id>
								<phase>initialize</phase>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<arguments>${package.npmCommand} --env.project=styleguide --env.maven --env.clean</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<!-- ensure that the empty directories are copied -->
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
						<executions>
							<execution>
								<id>copy-header-vault-resources-styleguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/${package.appFolder}/clientlibs/styleguide/clientlibs-header</outputDirectory>
									<resources>
										<resource>
											<directory>public/styleguide/clientlibs-header</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-footer-resources-styleguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/${package.appFolder}/clientlibs/styleguide/clientlibs-footer</outputDirectory>
									<resources>
										<resource>
											<directory>public/styleguide/clientlibs-footer</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.day.jcr.vault</groupId>
						<artifactId>content-package-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<verbose>false</verbose>
							<failOnError>true</failOnError>
							<group>${package.group}</group>
							<properties>
								<acHandling>merge_preserve</acHandling>
								<created>${buildNumber}</created>
								<createdBy>${package.createdBy}</createdBy>
								<description>${project.description}</description>
							</properties>
							<filters combine.children="append">
								<filter>
									<root>/${package.appFolder}/clientlibs/styleguide</root>
								</filter>
							</filters>
							<subPackages>
								<subPackage>
									<type>zip</type>
									<filter>true</filter>
								</subPackage>
							</subPackages>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- AEM.Design overrides -->
		<profile>
			<id>buildComponentDialogOverrides</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>

				<plugins>



					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<nodeVersion>${nodeVersion}</nodeVersion>
							<npmVersion>${npmVersion}</npmVersion>
							<yarnVersion>${yarnVersion}</yarnVersion>
						</configuration>
						<executions>
							<execution>
								<id>exec-aem-generate-tags-aemdesign</id>
								<phase>initialize</phase>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<arguments>- -stack_size=8192</arguments>
									<arguments>run aem:generatetags --no-clean --no-console --config=overrides.yml
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.day.jcr.vault</groupId>
						<artifactId>content-package-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<verbose>false</verbose>
							<failOnError>true</failOnError>
							<group>${package.group}</group>
							<properties>
								<acHandling>merge_preserve</acHandling>
								<created>${buildNumber}</created>
								<createdBy>${package.createdBy}</createdBy>
								<description>${project.description}</description>
							</properties>
							<filters combine.children="append">
								<filter>
									<root>/apps/aemdesign/global/dialog/touch/text/content/items/textTab/items/column/items/text/rtePlugins/misctools/specialCharsConfig/chars</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>/apps/aemdesign/global/dialog/touch/text/content/items/textTab/items/column/items/text/rtePlugins/styles/styles</root>
									<mode>update</mode>
								</filter>
								<filter>
									<root>/apps/aemdesign/global/dialog/touch/text/content/items/textTab/items/column/items/text/rtePlugins/paraformat/formats</root>
									<mode>update</mode>
								</filter>
							</filters>
							<subPackages>
								<subPackage>
									<type>zip</type>
									<filter>true</filter>
								</subPackage>
							</subPackages>
						</configuration>
					</plugin>


				</plugins>



			</build>
		</profile>



		<!-- AEM.Design overrides -->
		<profile>
			<id>copyTags</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>

				<plugins>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<groupId>org.apache.maven.plugins</groupId>
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
						<executions>
							<execution>
								<id>copy-content-generator-content-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/</outputDirectory>
									<resources>
										<resource>
											<directory>content-generator/content</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>



			</build>
		</profile>

	</profiles>

</project>
