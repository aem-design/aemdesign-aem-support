// stylelint-disable function-parentheses-newline-inside
// stylelint-disable scss/at-function-named-arguments

@mixin heading-underline($underline-colour) {
  &::after {
    background-color: $underline-colour;
    content: '';
    display: block;
    height: 1px;
    margin-top: 20px;
    width: 80px;

    @include media-breakpoint-up(lg) {
      margin-top: 30px;
    }
  }
}

@mixin headings-underline(
  $selectors: h1 h2 h3 h4,
  $extend-to-class: true,
  $underline-colour: color('red'),
  $parent-nesting: false,
) {
  $main-headings: $selectors;

  // Headings keyline (underline)
  @if $parent-nesting == true {
    @include heading-underline($underline-colour);
  }
  @else {
    @if $extend-to-class == true {
      @each $selector in $selectors {
        $main-headings: append($main-headings, unquote('.#{$selector}'), $separator: comma);
      }
    }
    @else {
      $main-headings: append($main-headings, '', $separator: comma);
    }

    #{$main-headings} {
      @include heading-underline($underline-colour);
    }
  }

  // Apply a different keyline margin depending on the heading level
  @each $level in $selectors {
    @each $bp, $opts in typography-heading(nth($level, length($level))) {
      @if not not $opts and map-has-key($opts, margin-bottom) {
        @include media-breakpoint-up($bp) {
          @if $parent-nesting == true {
            &::after {
              margin-top: map-get($opts, margin-bottom);
            }
          }
          @else {
            $level-selectors: selector-nest(
              if($extend-to-class == true, ($level ', .#{$level}'), $level),
              '&::after',
            );

            #{$level-selectors} {
              margin-top: map-get($opts, margin-bottom);
            }
          }
        }
      }
    }
  }

  // H4 headings have a slightly smaller keyline under them on larger screens
  @if index($selectors, h4) != null {
    $h4-selectors: selector-nest(
      if($extend-to-class == true, (h4 unquote(', .h4')), h4),
      '&::after',
    );

    #{$h4-selectors} {
      @include media-breakpoint-up(lg) {
        width: 60px;
      }
    }
  }
}
