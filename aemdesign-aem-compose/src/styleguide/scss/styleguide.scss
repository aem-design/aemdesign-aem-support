// stylelint-disable declaration-no-important
// stylelint-disable selector-max-compound-selectors
// stylelint-disable selector-max-combinators
// stylelint-disable selector-max-id
// stylelint-disable selector-max-type

$styleguide-sidebar-width: 260px;

// Internals
@import '../../core/scss/setup';

html,
body {
  min-height: 100%;
}

.container--styleguide {
  max-width: 100%;
  padding-left: 0;
  padding-right: 0;
}

.styleguide div.aside {
  display: none;
}

@include not-aem-author('.styleguide') {
  // causing specificty issues
  // todo: appears to styles for styleguide nav, better hook for this?
  .article,
  div.aside {
    min-height: 100%;
  }

  aside {
    border-right: 1px solid lighten(color('black'), 85%);
    box-shadow: inset 0 -3px 10px rgba(color('black'), .2);
    height: 100%;
    overflow-y: auto;
    padding: 10px;
    position: fixed;
    width: $styleguide-sidebar-width;

    .navlist {
      padding-left: 0;

      li {
        padding-left: 0;
        padding-top: 0;

        &::before {
          display: none;
        }

        &:not(:last-child) {
          margin-bottom: $grid-gutter-width / 2;
        }
      }

      .nav-item.l-1 > a {
        font-weight: 800;
      }

      .nav-item.l-2 {
        padding-right: 10px;
        position: relative;

        &::before {
          background-color: transparent;
          content: '';
          display: block;
          height: 100%;
          left: -10px;
          position: absolute;
          top: 0;
          width: 5px;
        }

        &.active {
          // background-color: color('grey-5');
        }

        &.active::before {
          // background-color: color('red');
        }
      }

      .nav-link {
        // color: $body-color;
        padding: 0;

        &:hover {
          // color: color('red');
        }

        &.active:not(.dropdown-toggle) {
          // color: color('charcoal');
        }
      }

      .meta {
        display: none;
      }

      .dropdown-menu {
        background-color: transparent;
        border-width: 0;
        display: block;
        float: none;
        margin-left: -10px;
        margin-right: -10px;
        padding-left: 10px;
        position: static !important;
        transform: none !important;
      }

      &:not(:last-child) {
        margin-bottom: $grid-gutter-width / 2;
      }
    }

    #dls_intro_tagline,
    #dls_home_button {
      margin-bottom: $grid-gutter-width / 2;
    }
  }

  div.article {
    height: 100%;
  }

  article {
    position: relative;
    width: 100%;
  }

  @include media-breakpoint-up(xl) {
    div.aside {
      display: block;
    }

    div.article {
      margin-left: $styleguide-sidebar-width;
      width: calc(100% - #{$styleguide-sidebar-width});
    }
  }
}

.styleguide {
  section.contentblock:not(:last-of-type) {
    margin-bottom: $grid-gutter-width;
  }

  .page-details ~ div.contentblock {
    > .contentblock {
      // iPhone X support
      @include notch-awesome;

      padding: $grid-gutter-width $grid-gutter-width / 2;

      @include media-breakpoint-up(lg) {
        padding-left: $grid-gutter-width;
        padding-right: $grid-gutter-width;
      }
    }

    > div > div > .text:not(:last-child),
    > div > div > .text ~ [component]:not(:last-child) {
      margin-bottom: 15px;

      @include media-breakpoint-up(md) {
        margin-bottom: $grid-gutter-width;
        padding-left: 0;
        padding-right: 0;
      }
    }

    &:not(:last-of-type) {
      margin-bottom: 0;
    }
  }
}

@import 'colour-panel';
@import 'icon-panel';
@import 'grid-panel';
@import 'table';

@include media-breakpoint-only(sm) {
  @import 'component-fixes';
}
