#!/bin/sh
#
#   ADOBE CONFIDENTIAL
#   __________________
#
#    Copyright 2012 Adobe Systems Incorporated
#    All Rights Reserved.
#
#   NOTICE:  All information contained herein is, and remains
#   the property of Adobe Systems Incorporated and its suppliers,
#   if any.  The intellectual and technical concepts contained
#   herein are proprietary to Adobe Systems Incorporated and its
#   suppliers and are protected by trade secret or copyright law.
#   Dissemination of this information or reproduction of this material
#   is strictly forbidden unless prior written permission is obtained
#   from Adobe Systems Incorporated.

#----------------------------------------------------------------------------
#File Vault Start Up Batch script
#
#Required ENV vars:
#------------------
#  JAVA_HOME - location of a JDK home dir
#
#Optional ENV vars
#-----------------
#  VLT_OPTS - parameters passed to the Java VM when running Vault
#    e.g. to debug vault itself, use
#      set VLT_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
#----------------------------------------------------------------------------

if [ -f /etc/vaultrc ] ; then
  . /etc/vaultrc
fi

if [ -f "$HOME/.vaultrc" ] ; then
  . "$HOME/.vaultrc"
fi

# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
VLT_HOME=`cd "$PRGDIR/.." >/dev/null; pwd`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$VLT_HOME"/lib
fi

CLASSPATH=$CLASSPATH_PREFIX:"$REPO"/com.day.jcr.vault-2.4.40.jar:"$REPO"/vault-vlt-2.4.40.jar:"$REPO"/jackrabbit-jcr-commons-2.4.4-r1468174.jar:"$REPO"/vault-diff-2.4.40.jar:"$REPO"/commons-io-1.4.jar:"$REPO"/vault-sync-2.4.40.jar:"$REPO"/commons-jci-fam-1.0.jar:"$REPO"/commons-logging-api-1.1.jar:"$REPO"/org.apache.sling.jcr.api-2.0.6.jar:"$REPO"/org.apache.sling.commons.osgi-2.0.6.jar:"$REPO"/vault-davex-2.4.40.jar:"$REPO"/jackrabbit-jcr-client-2.4.4-r1468174.jar:"$REPO"/jackrabbit-spi-commons-2.4.4-r1468174.jar:"$REPO"/jackrabbit-spi-2.4.4-r1468174.jar:"$REPO"/commons-collections-3.2.1.jar:"$REPO"/jackrabbit-jcr2spi-2.4.4-r1468174.jar:"$REPO"/jackrabbit-api-2.4.4-r1468174.jar:"$REPO"/jackrabbit-spi2dav-2.4.4-r1468174.jar:"$REPO"/jackrabbit-webdav-2.4.4-r1468174.jar:"$REPO"/commons-httpclient-3.0.jar:"$REPO"/commons-codec-1.2.jar:"$REPO"/jcl-over-slf4j-1.5.8.jar:"$REPO"/commons-cli-2.0-mahout.jar:"$REPO"/jline-0.9.94.jar:"$REPO"/jcr-2.0.jar:"$REPO"/slf4j-api-1.5.8.jar:"$REPO"/slf4j-log4j12-1.5.8.jar:"$REPO"/log4j-1.2.12.jar:"$REPO"/vault-cli-2.4.40.jar

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$VLT_HOME" ] && VLT_HOME=`cygpath --path --windows "$VLT_HOME"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

EXTRA_JVM_ARGUMENTS="-Xms500m -Xmx500m -XX:PermSize=128m -XX:-UseGCOverheadLimit"

# try to determine terminal width
COLS=$COLUMNS
if [ -x "/bin/stty" ]; then
    TERM_SIZE=`/bin/stty size 2>/dev/null` 
    for a in ${TERM_SIZE}; do
        COLS=$a
    done
fi

if [ -n "$COLS" ]; then
    EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Denv.term.width=${COLS}"
fi

exec "$JAVACMD" $VLT_OPTS $EXTRA_JVM_ARGUMENTS \
  -classpath "$CLASSPATH" \
  -Dapp.name="vlt" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dvlt.home="$VLT_HOME" \
  com.day.jcr.vault.cli.VaultFsApp \
  "$@"
