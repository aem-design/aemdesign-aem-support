#!/bin/bash

PARENT_PROJECT_PATH="$(pwd)"
SCRIPT_PARAMS="$@"
SKIP_PRINT_CONFIG=true

source "../scripts/functions.sh"

if [[ $(which ansible-galaxy) == "" || $(which ansible-playbook) == "" ]]; then
    echo PLEASE INSTALL ANSIBLE
    exit 1
fi

NETWORK_INTERFACE=$(route -n get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
LOCAL_IP=$(ifconfig $NETWORK_INTERFACE | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | head -1)

AEM_PORT=5502
SELENIUMHUB_PORT=9944

#echo PACKAGE PROJECT
#mvn clean package -DskipTests=true

echo RUNNING TESTS
pip3 install ansible
echo INSTALLING ANSIBLE GALAXY REQUIREMENTS
ansible-galaxy install -r requirements.yml --force
echo PREPARE INFRASTRUCTURE

PACKAGE_FILE="$(pwd)/$(ls -b aemdesign-aem-support-deploy/target/*.zip | sed -n '$p')"
PACKAGE_FILENAME=$(basename ${PACKAGE_FILE})

echo UPLOAD FILE: ${PACKAGE_FILE}
echo UPLOAD FILENAME: ${PACKAGE_FILENAME}
echo AEM_PORT: ${AEM_PORT}
echo SELENIUMHUB_PORT: ${SELENIUMHUB_PORT}
echo LOCAL_IP: ${LOCAL_IP}

ansible-playbook --connection=local  automation-testing.yml --extra-vars "package_file=$PACKAGE_FILE package_filename=$PACKAGE_FILENAME service_selenium_grid_port=${SELENIUMHUB_PORT} service_aem_access_port=${AEM_PORT}"
echo RUN TESTS

echo CURRENT DIR: $(pwd)
echo ls -l

AEM_AVAILABLE=$(testServer http://${LOCAL_IP}:${AEM_PORT})
HUB_AVAILABLE=$(testServer http://${LOCAL_IP}:${SELENIUMHUB_PORT})

if [[ "${AEM_AVAILABLE}" == "false" || "${HUB_AVAILABLE}" == "false" ]]; then
    echo PLEASE ENSURE AEM AND SELENIIUM HUB IS AVAILABLE
    exit 1
fi

cd aemdesign-testing
./test-spec --login --host $LOCAL_IP --port ${AEM_PORT} --url http://$LOCAL_IP:${SELENIUMHUB_PORT}/wd/hub GenericDetailsA*

if [[ ! -d "remote-seleniumhub-chrome/generated-docs/html" ]]; then
    echo TEST DID NOT OUTPUT ANY RESULTS
    exit 1
fi

echo CURRENT DIR: $(pwd)

echo ">>> CURRENT <<<"
ls -l


export TEST_RESULTS="$(pwd)/remote-seleniumhub-chrome"
echo TEST_RESULTS: ${TEST_RESULTS}

echo ">>> TEST_RESULTS <<<"
ls -l ${TEST_RESULTS}

export OUTPUT_SOURCE="${TEST_RESULTS}/generated-docs"
echo OUTPUT_SOURCE: ${OUTPUT_SOURCE}

echo ">>> OUTPUT_SOURCE <<<"
ls -l ${OUTPUT_SOURCE}

echo PUBLISH RESULTS
export PATH_GHPAGES="./build/ghpages"

echo CREATE TEMP FOLDER
mkdir -p ${PATH_GHPAGES}

echo CLONE OUTPUT REPO
cd ${PATH_GHPAGES}
git clone https://github.com/aem-design/aemdesign-aem-support-output.git


echo SWITCH TO GH-PAGES BRANCH
cd aemdesign-aem-support-output

echo CURRENT DIR: $(pwd)
ls -l

OUTPUT_DEST="$(pwd)/generated-docs"
echo OUTPUT_DEST: ${OUTPUT_DEST}

echo CHECKOUT GH-PAGES
git checkout gh-pages

echo COPY UPDATED RESULTS
echo COPY: "${OUTPUT_SOURCE}"
echo TO: "${OUTPUT_DEST}"
cp -Rv "${OUTPUT_SOURCE}" "${OUTPUT_DEST}"

echo COMMIT AND PUSH UPDATES
git add .
git commit -a -m "update reports"
git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/aem-design/aemdesign-aem-support-output.git" gh-pages
