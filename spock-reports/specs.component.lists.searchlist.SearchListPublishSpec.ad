= Report for specs.component.lists.searchlist.SearchListPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 04:36:19 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|12|100.0% |53.919 seconds |0 |0 |0
|====

== Features

=== Functionality of Search List Component Variant: Default without Query in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.807 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should be empty and contain default text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).children().size() == 1 &&  $(selector).children().text().contains("Invalid query given!")
----

| 
|====

* **Where:** Browser size width: 320 and height: 480

=====

=== Functionality of Search List Component Variant: Default without Query in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.831 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should be empty and contain default text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).children().size() == 1 &&  $(selector).children().text().contains("Invalid query given!")
----

| 
|====

* **Where:** Browser size width: 640 and height: 480

=====

=== Functionality of Search List Component Variant: Default without Query in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.767 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should be empty and contain default text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).children().size() == 1 &&  $(selector).children().text().contains("Invalid query given!")
----

| 
|====

* **Where:** Browser size width: 1024 and height: 768

=====

=== Functionality of Search List Component Variant: Default without Query in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.827 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should be empty and contain default text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).children().size() == 1 &&  $(selector).children().text().contains("Invalid query given!")
----

| 
|====

* **Where:** Browser size width: 1366 and height: 1024

=====

=== Functionality of Search List Component Variant: Default without Query in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.922 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should be empty and contain default text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).children().size() == 1 &&  $(selector).children().text().contains("Invalid query given!")
----

| 
|====

* **Where:** Browser size width: 1920 and height: 1280

=====

=== Functionality of Search List Component Variant: Default without Query in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 3.154 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Variant-Default-without-Query-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should be empty and contain default text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).children().size() == 1 &&  $(selector).children().text().contains("Invalid query given!")
----

| 
|====

* **Where:** Browser size width: 2560 and height: 1440

=====

=== Functionality of Search List Component Default with Query in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 4.495 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def stringQuery = "fulltext=city\n" +
"group.p.or=true\n" +
"group.1_group.path=/content/aemdesign-showcase/au/en/component/lists/search-list\n" +
"group.1_group.type=cq:Page\n" +
"group.1_group.property=@jcr:content/hideInNav\n" +
"group.1_group.property.operation=exists\n" +
"group.1_group.property.value=false\n" +
"group.2_group.path=/content/dam/aemdesign-showcase\n" +
"group.2_group.type=dam:Asset\n" +
"orderby=path"
def query_string = "q=" + URLEncoder.encode(stringQuery, "UTF-8")
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPageWithQuery(language, query_string)
printDebug("URL", driver.currentUrl)
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should contain results

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).find(".results").children().size() > 0
----

| 
|====

* **Where:** Browser size width: 320 and height: 480

=====

=== Functionality of Search List Component Default with Query in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 3.338 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def stringQuery = "fulltext=city\n" +
"group.p.or=true\n" +
"group.1_group.path=/content/aemdesign-showcase/au/en/component/lists/search-list\n" +
"group.1_group.type=cq:Page\n" +
"group.1_group.property=@jcr:content/hideInNav\n" +
"group.1_group.property.operation=exists\n" +
"group.1_group.property.value=false\n" +
"group.2_group.path=/content/dam/aemdesign-showcase\n" +
"group.2_group.type=dam:Asset\n" +
"orderby=path"
def query_string = "q=" + URLEncoder.encode(stringQuery, "UTF-8")
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPageWithQuery(language, query_string)
printDebug("URL", driver.currentUrl)
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should contain results

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).find(".results").children().size() > 0
----

| 
|====

* **Where:** Browser size width: 640 and height: 480

=====

=== Functionality of Search List Component Default with Query in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 4.252 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def stringQuery = "fulltext=city\n" +
"group.p.or=true\n" +
"group.1_group.path=/content/aemdesign-showcase/au/en/component/lists/search-list\n" +
"group.1_group.type=cq:Page\n" +
"group.1_group.property=@jcr:content/hideInNav\n" +
"group.1_group.property.operation=exists\n" +
"group.1_group.property.value=false\n" +
"group.2_group.path=/content/dam/aemdesign-showcase\n" +
"group.2_group.type=dam:Asset\n" +
"orderby=path"
def query_string = "q=" + URLEncoder.encode(stringQuery, "UTF-8")
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPageWithQuery(language, query_string)
printDebug("URL", driver.currentUrl)
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should contain results

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).find(".results").children().size() > 0
----

| 
|====

* **Where:** Browser size width: 1024 and height: 768

=====

=== Functionality of Search List Component Default with Query in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 5.775 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def stringQuery = "fulltext=city\n" +
"group.p.or=true\n" +
"group.1_group.path=/content/aemdesign-showcase/au/en/component/lists/search-list\n" +
"group.1_group.type=cq:Page\n" +
"group.1_group.property=@jcr:content/hideInNav\n" +
"group.1_group.property.operation=exists\n" +
"group.1_group.property.value=false\n" +
"group.2_group.path=/content/dam/aemdesign-showcase\n" +
"group.2_group.type=dam:Asset\n" +
"orderby=path"
def query_string = "q=" + URLEncoder.encode(stringQuery, "UTF-8")
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPageWithQuery(language, query_string)
printDebug("URL", driver.currentUrl)
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should contain results

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).find(".results").children().size() > 0
----

| 
|====

* **Where:** Browser size width: 1366 and height: 1024

=====

=== Functionality of Search List Component Default with Query in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 8.030 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def stringQuery = "fulltext=city\n" +
"group.p.or=true\n" +
"group.1_group.path=/content/aemdesign-showcase/au/en/component/lists/search-list\n" +
"group.1_group.type=cq:Page\n" +
"group.1_group.property=@jcr:content/hideInNav\n" +
"group.1_group.property.operation=exists\n" +
"group.1_group.property.value=false\n" +
"group.2_group.path=/content/dam/aemdesign-showcase\n" +
"group.2_group.type=dam:Asset\n" +
"orderby=path"
def query_string = "q=" + URLEncoder.encode(stringQuery, "UTF-8")
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPageWithQuery(language, query_string)
printDebug("URL", driver.currentUrl)
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should contain results

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).find(".results").children().size() > 0
----

| 
|====

* **Where:** Browser size width: 1920 and height: 1280

=====

=== Functionality of Search List Component Default with Query in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 8.935 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Search List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#searchlist1"
def stringQuery = "fulltext=city\n" +
"group.p.or=true\n" +
"group.1_group.path=/content/aemdesign-showcase/au/en/component/lists/search-list\n" +
"group.1_group.type=cq:Page\n" +
"group.1_group.property=@jcr:content/hideInNav\n" +
"group.1_group.property.operation=exists\n" +
"group.1_group.property.value=false\n" +
"group.2_group.path=/content/dam/aemdesign-showcase\n" +
"group.2_group.type=dam:Asset\n" +
"orderby=path"
def query_string = "q=" + URLEncoder.encode(stringQuery, "UTF-8")
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPageWithQuery(language, query_string)
printDebug("URL", driver.currentUrl)
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/searchlist/SearchListPublishSpec/Functionality-of-Search-List-Component-Default-with-Query-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should contain results

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).find(".results").children().size() > 0
----

| 
|====

* **Where:** Browser size width: 2560 and height: 1440

=====

