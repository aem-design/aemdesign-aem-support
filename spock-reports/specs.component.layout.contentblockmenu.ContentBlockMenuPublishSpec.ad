= Report for specs.component.layout.contentblockmenu.ContentBlockMenuPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 04:58:07 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|18|100.0% |39.604 seconds |0 |0 |0
|====

== Features

=== Functionality of Component Menu Source: Page in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.153 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu1"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.535 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu1"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.297 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu1"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.974 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu1"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.176 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu1"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.412 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu1"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.749 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu2"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked Nested"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked Nested"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.743 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu2"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked Nested"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked Nested"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.895 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu2"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked Nested"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked Nested"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.365 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu2"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked Nested"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked Nested"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.137 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu2"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked Nested"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked Nested"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Menu Source: Page in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.696 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu2"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Component-Menu-Source-Page-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have first link with Section Locked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Section Locked Nested"
----

| 
|====

* **And** Should have second link with Container Unlocked

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Container Unlocked Nested"
----

| 
|====

* **Where:** 

=====

=== Functionality of Content Block Menu in Content Block in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.915 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu13"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample text from the first content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Content Block Test 1"
----

| 
|====

* **And** Should have sample text from the second content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Content Block Test 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Content Block Menu in Content Block in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.782 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu13"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample text from the first content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Content Block Test 1"
----

| 
|====

* **And** Should have sample text from the second content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Content Block Test 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Content Block Menu in Content Block in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.946 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu13"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample text from the first content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Content Block Test 1"
----

| 
|====

* **And** Should have sample text from the second content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Content Block Test 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Content Block Menu in Content Block in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.347 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu13"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample text from the first content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Content Block Test 1"
----

| 
|====

* **And** Should have sample text from the second content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Content Block Test 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Content Block Menu in Content Block in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.119 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu13"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample text from the first content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Content Block Test 1"
----

| 
|====

* **And** Should have sample text from the second content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Content Block Test 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Content Block Menu in Content Block in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.218 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "ContentBlockMenu"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#contentblockmenu13"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/contentblockmenu/ContentBlockMenuPublishSpec/Functionality-of-Content-Block-Menu-in-Content-Block-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample text from the first content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[0].getAttribute("innerText") == "Content Block Test 1"
----

| 
|====

* **And** Should have sample text from the second content block title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector a")[1].getAttribute("innerText") == "Content Block Test 2"
----

| 
|====

* **Where:** 

=====

