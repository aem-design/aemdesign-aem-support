= Report for specs.component.content.table.TablePublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 05:45:42 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|6|100.0% |19.010 seconds |0 |0 |0
|====

== Features

=== Functionality of Component Variant: Default in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.560 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Table"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#table1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Header")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-XS-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-XS-Should-have-sample-content.png"]

|====

* **And** Has sample table content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} table").isEmpty() == false
----

| 
|====

* **And** Has sample link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} a").isEmpty() == false
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.559 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Table"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#table1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Header")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-SM-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-SM-Should-have-sample-content.png"]

|====

* **And** Has sample table content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} table").isEmpty() == false
----

| 
|====

* **And** Has sample link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} a").isEmpty() == false
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.600 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Table"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#table1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Header")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-MD-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-MD-Should-have-sample-content.png"]

|====

* **And** Has sample table content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} table").isEmpty() == false
----

| 
|====

* **And** Has sample link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} a").isEmpty() == false
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.799 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Table"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#table1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Header")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-LG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-LG-Should-have-sample-content.png"]

|====

* **And** Has sample table content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} table").isEmpty() == false
----

| 
|====

* **And** Has sample link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} a").isEmpty() == false
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.888 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Table"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#table1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Header")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-XLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-XLG-Should-have-sample-content.png"]

|====

* **And** Has sample table content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} table").isEmpty() == false
----

| 
|====

* **And** Has sample link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} a").isEmpty() == false
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 3.437 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Table"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#table1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Header")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-XXLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/table/TablePublishSpec/Functionality-of-Component-Variant-Default-in-XXLG-Should-have-sample-content.png"]

|====

* **And** Has sample table content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} table").isEmpty() == false
----

| 
|====

* **And** Has sample link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} a").isEmpty() == false
----

| 
|====

* **Where:** 

=====

