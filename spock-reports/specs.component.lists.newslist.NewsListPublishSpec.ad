= Report for specs.component.lists.newslist.NewsListPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 04:55:27 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|24|100.0% |39.374 seconds |0 |0 |0
|====

== Features

=== Functionality of Component with Default variant using Default badge in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.813 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "News List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 6
----

| 
|====

* **And** Has first item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.first").text().trim() == "News Title 1"
----

| 
|====

* **And** Has last item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.last").text().trim() == "News Title 3"
----

| 
|====

* **Where:** Browser size width: 320 and height: 480

=====

=== Functionality of Component with Default variant using Default badge in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.403 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "News List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 6
----

| 
|====

* **And** Has first item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.first").text().trim() == "News Title 1"
----

| 
|====

* **And** Has last item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.last").text().trim() == "News Title 3"
----

| 
|====

* **Where:** Browser size width: 640 and height: 480

=====

=== Functionality of Component with Default variant using Default badge in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.253 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "News List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 6
----

| 
|====

* **And** Has first item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.first").text().trim() == "News Title 1"
----

| 
|====

* **And** Has last item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.last").text().trim() == "News Title 3"
----

| 
|====

* **Where:** Browser size width: 1024 and height: 768

=====

=== Functionality of Component with Default variant using Default badge in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.534 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "News List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 6
----

| 
|====

* **And** Has first item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.first").text().trim() == "News Title 1"
----

| 
|====

* **And** Has last item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.last").text().trim() == "News Title 3"
----

| 
|====

* **Where:** Browser size width: 1366 and height: 1024

=====

=== Functionality of Component with Default variant using Default badge in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.559 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "News List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 6
----

| 
|====

* **And** Has first item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.first").text().trim() == "News Title 1"
----

| 
|====

* **And** Has last item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.last").text().trim() == "News Title 3"
----

| 
|====

* **Where:** Browser size width: 1920 and height: 1280

=====

=== Functionality of Component with Default variant using Default badge in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.081 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "News List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Default-variant-using-Default-badge-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 6
----

| 
|====

* **And** Has first item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.first").text().trim() == "News Title 1"
----

| 
|====

* **And** Has last item with title from Details component

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li.last").text().trim() == "News Title 3"
----

| 
|====

* **Where:** Browser size width: 2560 and height: 1440

=====

=== Functionality of Component with Card with Image Title Category Description and Action in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.214 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist3"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Has two list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-title").size() == 2
----

| 
|====

* **And** Has card description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-text").size() == 2
----

| 
|====

* **Where:** Browser size width: 320 and height: 480

=====

=== Functionality of Component with Card with Image Title Category Description and Action in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.411 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist3"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Has two list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-title").size() == 2
----

| 
|====

* **And** Has card description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-text").size() == 2
----

| 
|====

* **Where:** Browser size width: 640 and height: 480

=====

=== Functionality of Component with Card with Image Title Category Description and Action in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.489 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist3"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Has two list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-title").size() == 2
----

| 
|====

* **And** Has card description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-text").size() == 2
----

| 
|====

* **Where:** Browser size width: 1024 and height: 768

=====

=== Functionality of Component with Card with Image Title Category Description and Action in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.614 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist3"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Has two list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-title").size() == 2
----

| 
|====

* **And** Has card description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-text").size() == 2
----

| 
|====

* **Where:** Browser size width: 1366 and height: 1024

=====

=== Functionality of Component with Card with Image Title Category Description and Action in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.655 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist3"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has two list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-title").size() == 2
----

| 
|====

* **And** Has card description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-text").size() == 2
----

| 
|====

* **Where:** Browser size width: 1920 and height: 1280

=====

=== Functionality of Component with Card with Image Title Category Description and Action in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.253 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist3"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Category-Description-and-Action-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has two list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-title").size() == 2
----

| 
|====

* **And** Has card description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-text").size() == 2
----

| 
|====

* **Where:** Browser size width: 2560 and height: 1440

=====

=== Functionality of Component with Card with Image Title Subtitle Description and Action in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.288 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist4"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **Where:** Browser size width: 320 and height: 480

=====

=== Functionality of Component with Card with Image Title Subtitle Description and Action in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.495 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist4"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **Where:** Browser size width: 640 and height: 480

=====

=== Functionality of Component with Card with Image Title Subtitle Description and Action in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.660 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist4"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **Where:** Browser size width: 1024 and height: 768

=====

=== Functionality of Component with Card with Image Title Subtitle Description and Action in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.373 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist4"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **Where:** Browser size width: 1366 and height: 1024

=====

=== Functionality of Component with Card with Image Title Subtitle Description and Action in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.630 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist4"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **Where:** Browser size width: 1920 and height: 1280

=====

=== Functionality of Component with Card with Image Title Subtitle Description and Action in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.283 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist4"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Description-and-Action-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **Where:** Browser size width: 2560 and height: 1440

=====

=== Functionality of Component with Card with Image Title Subtitle Action and Date in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.348 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist5"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **And** Has card with date

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").size() == 2
----

| 
|====

* **And** Date output has datetime attribute

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("datetime") == "2019-01-01"
----

| 
|====

* **And** Date output matches format

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("innerText") == "Tuesday 01 January 2019"
----

| 
|====

* **Where:** Browser size width: 320 and height: 480

=====

=== Functionality of Component with Card with Image Title Subtitle Action and Date in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.332 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist5"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **And** Has card with date

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").size() == 2
----

| 
|====

* **And** Date output has datetime attribute

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("datetime") == "2019-01-01"
----

| 
|====

* **And** Date output matches format

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("innerText") == "Tuesday 01 January 2019"
----

| 
|====

* **Where:** Browser size width: 640 and height: 480

=====

=== Functionality of Component with Card with Image Title Subtitle Action and Date in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.387 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist5"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **And** Has card with date

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").size() == 2
----

| 
|====

* **And** Date output has datetime attribute

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("datetime") == "2019-01-01"
----

| 
|====

* **And** Date output matches format

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("innerText") == "Tuesday 01 January 2019"
----

| 
|====

* **Where:** Browser size width: 1024 and height: 768

=====

=== Functionality of Component with Card with Image Title Subtitle Action and Date in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.558 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist5"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **And** Has card with date

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").size() == 2
----

| 
|====

* **And** Date output has datetime attribute

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("datetime") == "2019-01-01"
----

| 
|====

* **And** Date output matches format

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("innerText") == "Tuesday 01 January 2019"
----

| 
|====

* **Where:** Browser size width: 1366 and height: 1024

=====

=== Functionality of Component with Card with Image Title Subtitle Action and Date in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.616 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist5"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **And** Has card with date

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").size() == 2
----

| 
|====

* **And** Date output has datetime attribute

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("datetime") == "2019-01-01"
----

| 
|====

* **And** Date output matches format

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("innerText") == "Tuesday 01 January 2019"
----

| 
|====

* **Where:** Browser size width: 1920 and height: 1280

=====

=== Functionality of Component with Card with Image Title Subtitle Action and Date in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.844 seconds

* **Given:** >the page hierarchy is created as "Components" > "Lists" > "Page List"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#newslist5"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/lists/newslist/NewsListPublishSpec/Functionality-of-Component-with-Card-with-Image-Title-Subtitle-Action-and-Date-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Has five list items

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} li").size() == 2
----

| 
|====

* **And** Has card images

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} img").size() == 2
----

| 
|====

* **And** Has card with date

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").size() == 2
----

| 
|====

* **And** Date output has datetime attribute

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("datetime") == "2019-01-01"
----

| 
|====

* **And** Date output matches format

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .card-date time").firstElement().getAttribute("innerText") == "Tuesday 01 January 2019"
----

| 
|====

* **Where:** Browser size width: 2560 and height: 1440

=====

