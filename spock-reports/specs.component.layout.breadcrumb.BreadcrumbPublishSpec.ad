= Report for specs.component.layout.breadcrumb.BreadcrumbPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 05:15:12 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|24|100.0% |46.030 seconds |0 |0 |0
|====

== Features

=== Functionality of Component in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.796 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** There should be a HREF value associated with Components link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component.html']", text: "Components")
----

| 
|====

* **And** There should be a HREF value associated with Layout link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component/layout.html']", text: "Layout")
----

| 
|====

* **And** There should be a HREF value associated with Breadcrumb link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " li.active span", text: "Breadcrumb")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.578 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** There should be a HREF value associated with Components link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component.html']", text: "Components")
----

| 
|====

* **And** There should be a HREF value associated with Layout link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component/layout.html']", text: "Layout")
----

| 
|====

* **And** There should be a HREF value associated with Breadcrumb link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " li.active span", text: "Breadcrumb")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.686 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** There should be a HREF value associated with Components link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component.html']", text: "Components")
----

| 
|====

* **And** There should be a HREF value associated with Layout link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component/layout.html']", text: "Layout")
----

| 
|====

* **And** There should be a HREF value associated with Breadcrumb link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " li.active span", text: "Breadcrumb")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.208 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** There should be a HREF value associated with Components link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component.html']", text: "Components")
----

| 
|====

* **And** There should be a HREF value associated with Layout link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component/layout.html']", text: "Layout")
----

| 
|====

* **And** There should be a HREF value associated with Breadcrumb link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " li.active span", text: "Breadcrumb")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.965 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** There should be a HREF value associated with Components link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component.html']", text: "Components")
----

| 
|====

* **And** There should be a HREF value associated with Layout link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component/layout.html']", text: "Layout")
----

| 
|====

* **And** There should be a HREF value associated with Breadcrumb link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " li.active span", text: "Breadcrumb")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.121 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** There should be a HREF value associated with Components link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component.html']", text: "Components")
----

| 
|====

* **And** There should be a HREF value associated with Layout link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " a[href='/content/aemdesign-showcase/au/en/component/layout.html']", text: "Layout")
----

| 
|====

* **And** There should be a HREF value associated with Breadcrumb link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$(selector + " li.active span", text: "Breadcrumb")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.434 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Layout"
----

| 
|====

* **And** Last link should be Breadcrumb

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Breadcrumb"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.738 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Layout"
----

| 
|====

* **And** Last link should be Breadcrumb

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Breadcrumb"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.650 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Layout"
----

| 
|====

* **And** Last link should be Breadcrumb

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Breadcrumb"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.900 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Layout"
----

| 
|====

* **And** Last link should be Breadcrumb

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Breadcrumb"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.285 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Layout"
----

| 
|====

* **And** Last link should be Breadcrumb

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Breadcrumb"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.962 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Layout"
----

| 
|====

* **And** Last link should be Breadcrumb

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Breadcrumb"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level and End Level in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.360 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Components

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Components"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level and End Level in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.600 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Components

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Components"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level and End Level in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.708 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Components

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Components"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level and End Level in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.748 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Components

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Components"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level and End Level in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.882 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Components

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Components"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Changed Start Level and End Level in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.482 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Changed-Start-Level-and-End-Level-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be Components

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "Components"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Show hidden in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.724 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be English

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "English"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Show hidden in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.509 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be English

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "English"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Show hidden in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.629 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be English

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "English"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Show hidden in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.861 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be English

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "English"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Show hidden in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.697 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be English

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "English"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component with Show hidden in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.329 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Breadcrumb"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#breadcrumb4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/breadcrumb/BreadcrumbPublishSpec/Functionality-of-Component-with-Show-hidden-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** First link should be English

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt(0).text().trim() == "English"
----

| 
|====

* **And** Last link should be Layout

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector li").getAt($("$selector li").size()-1).text().trim() == "Layout"
----

| 
|====

* **Where:** 

=====

