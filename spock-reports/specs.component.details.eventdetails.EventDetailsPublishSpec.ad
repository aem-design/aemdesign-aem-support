= Report for specs.component.details.eventdetails.EventDetailsPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 05:25:17 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|19|100.0% |30.728 seconds |0 |0 |0
|====

== Features

=== Functionality of Component Variant: Default in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.637 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h1").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 AM to 9:20 AM"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.496 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h1").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 AM to 9:20 AM"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.156 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h1").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 AM to 9:20 AM"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.599 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h1").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 AM to 9:20 AM"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.764 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h1").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 AM to 9:20 AM"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.001 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h1").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 AM to 9:20 AM"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Hidden in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.048 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Component should be hidden

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}[hidden]").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Hidden in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.145 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Component should be hidden

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}[hidden]").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Hidden in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.185 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Component should be hidden

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}[hidden]").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Hidden in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.223 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Component should be hidden

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}[hidden]").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Hidden in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.236 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Component should be hidden

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}[hidden]").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Hidden in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.351 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Component should be hidden

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}[hidden]").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Formatting in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.690 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-XS-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-XS-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h3").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 am9:20 am"
----

| 
|====

* **And** Has Description line with content that has startDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='startDate']").size() == 1
----

| 
|====

* **And** Has Description line with content that has endDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='endDate']").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Formatting in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.559 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-SM-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-SM-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h3").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 am9:20 am"
----

| 
|====

* **And** Has Description line with content that has startDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='startDate']").size() == 1
----

| 
|====

* **And** Has Description line with content that has endDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='endDate']").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Formatting in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.556 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-MD-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-MD-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h3").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 am9:20 am"
----

| 
|====

* **And** Has Description line with content that has startDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='startDate']").size() == 1
----

| 
|====

* **And** Has Description line with content that has endDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='endDate']").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Formatting in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.636 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-LG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-LG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h3").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 am9:20 am"
----

| 
|====

* **And** Has Description line with content that has startDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='startDate']").size() == 1
----

| 
|====

* **And** Has Description line with content that has endDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='endDate']").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Formatting in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.729 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-XLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-XLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h3").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 am9:20 am"
----

| 
|====

* **And** Has Description line with content that has startDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='startDate']").size() == 1
----

| 
|====

* **And** Has Description line with content that has endDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='endDate']").size() == 1
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Formatting in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.898 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
takeScreenshot($(selector).firstElement(), "The component should be on the page")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-XXLG-The-component-should-be-on-the-page.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/details/eventdetails/EventDetailsPublishSpec/Functionality-of-Component-Variant-Default-with-Formatting-in-XXLG-The-component-should-be-on-the-page.png"]

|====

* **And** Should have sample heading

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("$selector h3").text().trim().toLowerCase().equals("Event Details".toLowerCase())
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.description").text().trim() == "Event to showcase all events"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-subtitle").text().trim() == "Mon 1 October to Fri 5 October"
----

| 
|====

* **And** Has Description line with content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date").text().trim() == "9:20 am9:20 am"
----

| 
|====

* **And** Has Description line with content that has startDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='startDate']").size() == 1
----

| 
|====

* **And** Has Description line with content that has endDate time 

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} div.card-date time[itemprop='endDate']").size() == 1
----

| 
|====

* **Where:** 

=====

=== Event Details: Default metadata added to page **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.237 seconds

* **Given:** >the page hierarchy is created as "Components" > "Details" > "Event Details"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#event-details"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSizeLG()
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Page has metadata field og:title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("meta[property='og:title']").attr("content").equals("Event Details")
----

| 
|====

* **And** Page has metadata field og:type

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("meta[property='og:type']").attr("content").equals("article")
----

| 
|====

* **And** Page has metadata field og:image

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("meta[property='og:image']").attr("content").contains("event-details.thumb.")
----

| 
|====

* **And** Page has metadata field og:url

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("meta[property='og:url']").attr("content").contains("details/event-details.html")
----

| 
|====

* **And** Page has canonical link

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("link[rel='canonical']").attr("href").contains("details/event-details.html")
----

| 
|====

=====

