= Report for specs.component.content.tooltip.TooltipPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 05:26:10 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|6|100.0% |8.587 seconds |0 |0 |0
|====

== Features

=== Functionality of Component Variant: Default in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.192 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Text"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#tooltip1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Has sample title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-title").equals("Tool Tip Text")
----

| 
|====

* **And** Has sample description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-description").equals("Tool Tip Description")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.127 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Text"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#tooltip1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Has sample title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-title").equals("Tool Tip Text")
----

| 
|====

* **And** Has sample description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-description").equals("Tool Tip Description")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.203 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Text"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#tooltip1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Has sample title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-title").equals("Tool Tip Text")
----

| 
|====

* **And** Has sample description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-description").equals("Tool Tip Description")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.280 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Text"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#tooltip1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Has sample title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-title").equals("Tool Tip Text")
----

| 
|====

* **And** Has sample description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-description").equals("Tool Tip Description")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.287 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Text"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#tooltip1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Has sample title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-title").equals("Tool Tip Text")
----

| 
|====

* **And** Has sample description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-description").equals("Tool Tip Description")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.369 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Text"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#tooltip1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Has sample title

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-title").equals("Tool Tip Text")
----

| 
|====

* **And** Has sample description

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector}").attr("data-description").equals("Tool Tip Description")
----

| 
|====

* **Where:** 

=====

