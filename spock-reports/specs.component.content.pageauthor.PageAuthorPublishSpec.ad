= Report for specs.component.content.pageauthor.PageAuthorPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 05:53:57 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|24|100.0% |35.963 seconds |0 |0 |0
|====

== Features

=== Functionality of Component Variant: Default in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.366 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-XS-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-XS-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.412 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-SM-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-SM-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.405 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-MD-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-MD-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.872 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-LG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-LG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.561 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-XLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-XLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.639 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-XXLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-in-XXLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.197 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-XS-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-XS-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.374 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-SM-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-SM-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.276 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-MD-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-MD-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.378 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-LG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-LG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.518 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-XLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-XLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.650 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Administrator")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-XXLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-in-XXLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Override in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.242 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-XS-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-XS-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Override in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.275 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-SM-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-SM-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Override in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.279 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-MD-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-MD-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Override in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.922 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-LG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-LG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Override in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.368 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-XLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-XLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with Override in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.620 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-XXLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Default-with-Override-in-XXLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple with Override in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.371 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-XS-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-XS-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple with Override in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.223 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-SM-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-SM-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple with Override in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.298 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-MD-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-MD-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple with Override in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.389 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-LG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-LG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple with Override in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.468 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-XLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-XLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

=== Functionality of Component Variant: Simple with Override in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.725 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Page Author"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#pageauthor4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have sample text

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector).text().trim().startsWith("Author Full Name")
takeScreenshot($(selector).firstElement(), "Should have sample content")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-XXLG-Should-have-sample-content.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/content/pageauthor/PageAuthorPublishSpec/Functionality-of-Component-Variant-Simple-with-Override-in-XXLG-Should-have-sample-content.png"]

|====

* **Where:** 

=====

