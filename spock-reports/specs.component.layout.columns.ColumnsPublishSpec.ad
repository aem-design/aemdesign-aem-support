= Report for specs.component.layout.columns.ColumnsPublishSpec
// toc-title definition MUST follow document title without blank line!
:toc-title: Table of Contents
:sectnums:

[small]#created on Tue Jul 23 05:12:23 UTC 2019 by root#



== Summary

[options="header",cols="asciidoc,asciidoc"]
|====
|Total Runs        |Success Rate                           |Total time                        |Failures          |Errors          |Skipped
|48|100.0% |1 minutes, 54.382 seconds |0 |0 |0
|====

== Features

=== Functionality of Component Variant: Default using 1 Column Layout in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.905 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 1 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 1
takeScreenshot($(selector).firstElement(), "Should have 1 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-XS-Should-have-1-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-XS-Should-have-1-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 1 Column Layout in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.820 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 1 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 1
takeScreenshot($(selector).firstElement(), "Should have 1 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-SM-Should-have-1-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-SM-Should-have-1-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 1 Column Layout in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.810 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 1 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 1
takeScreenshot($(selector).firstElement(), "Should have 1 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-MD-Should-have-1-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-MD-Should-have-1-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 1 Column Layout in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.392 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 1 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 1
takeScreenshot($(selector).firstElement(), "Should have 1 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-LG-Should-have-1-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-LG-Should-have-1-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 1 Column Layout in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.293 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 1 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 1
takeScreenshot($(selector).firstElement(), "Should have 1 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-XLG-Should-have-1-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-XLG-Should-have-1-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 1 Column Layout in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.978 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl1"
def selectorContainer = "#contentblock1 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 1 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 1
takeScreenshot($(selector).firstElement(), "Should have 1 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-XXLG-Should-have-1-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-1-Column-Layout-in-XXLG-Should-have-1-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 2 Column Layout in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.903 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 2
takeScreenshot($(selector).firstElement(), "Should have 2 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-XS-Should-have-2-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-XS-Should-have-2-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 2 Column Layout in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.903 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 2
takeScreenshot($(selector).firstElement(), "Should have 2 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-SM-Should-have-2-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-SM-Should-have-2-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 2 Column Layout in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.922 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 2
takeScreenshot($(selector).firstElement(), "Should have 2 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-MD-Should-have-2-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-MD-Should-have-2-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 2 Column Layout in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.904 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 2
takeScreenshot($(selector).firstElement(), "Should have 2 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-LG-Should-have-2-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-LG-Should-have-2-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 2 Column Layout in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.421 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 2
takeScreenshot($(selector).firstElement(), "Should have 2 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-XLG-Should-have-2-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-XLG-Should-have-2-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 2 Column Layout in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.365 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl2"
def selectorContainer = "#contentblock2 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 2
takeScreenshot($(selector).firstElement(), "Should have 2 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-XXLG-Should-have-2-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-2-Column-Layout-in-XXLG-Should-have-2-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 3 Column Layout in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.920 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 3 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 3
takeScreenshot($(selector).firstElement(), "Should have 3 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-XS-Should-have-3-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-XS-Should-have-3-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 3 Column Layout in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.941 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 3 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 3
takeScreenshot($(selector).firstElement(), "Should have 3 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-SM-Should-have-3-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-SM-Should-have-3-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 3 Column Layout in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.296 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 3 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 3
takeScreenshot($(selector).firstElement(), "Should have 3 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-MD-Should-have-3-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-MD-Should-have-3-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 3 Column Layout in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.510 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 3 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 3
takeScreenshot($(selector).firstElement(), "Should have 3 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-LG-Should-have-3-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-LG-Should-have-3-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 3 Column Layout in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.280 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 3 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 3
takeScreenshot($(selector).firstElement(), "Should have 3 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-XLG-Should-have-3-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-XLG-Should-have-3-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 3 Column Layout in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.512 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl3"
def selectorContainer = "#contentblock3 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 3 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 3
takeScreenshot($(selector).firstElement(), "Should have 3 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-XXLG-Should-have-3-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-3-Column-Layout-in-XXLG-Should-have-3-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 4 Column Layout in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.141 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 4 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 4
takeScreenshot($(selector).firstElement(), "Should have 4 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-XS-Should-have-4-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-XS-Should-have-4-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 4 Column Layout in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.002 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 4 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 4
takeScreenshot($(selector).firstElement(), "Should have 4 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-SM-Should-have-4-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-SM-Should-have-4-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 4 Column Layout in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.215 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 4 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 4
takeScreenshot($(selector).firstElement(), "Should have 4 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-MD-Should-have-4-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-MD-Should-have-4-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 4 Column Layout in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 3.038 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 4 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 4
takeScreenshot($(selector).firstElement(), "Should have 4 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-LG-Should-have-4-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-LG-Should-have-4-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 4 Column Layout in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.996 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 4 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 4
takeScreenshot($(selector).firstElement(), "Should have 4 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-XLG-Should-have-4-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-XLG-Should-have-4-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 4 Column Layout in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.678 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl4"
def selectorContainer = "#contentblock4 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 4 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 4
takeScreenshot($(selector).firstElement(), "Should have 4 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-XXLG-Should-have-4-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-4-Column-Layout-in-XXLG-Should-have-4-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 5 Column Layout in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.141 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl5"
def selectorContainer = "#contentblock5 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-XS-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-XS-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 5 Column Layout in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.099 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl5"
def selectorContainer = "#contentblock5 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-SM-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-SM-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 5 Column Layout in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.252 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl5"
def selectorContainer = "#contentblock5 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-MD-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-MD-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 5 Column Layout in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.810 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl5"
def selectorContainer = "#contentblock5 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-LG-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-LG-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 5 Column Layout in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.910 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl5"
def selectorContainer = "#contentblock5 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-XLG-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-XLG-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 5 Column Layout in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.581 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl5"
def selectorContainer = "#contentblock5 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-XXLG-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-5-Column-Layout-in-XXLG-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 6 Column Layout in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.615 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl6"
def selectorContainer = "#contentblock6 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 6 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 6
takeScreenshot($(selector).firstElement(), "Should have 6 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-XS-Should-have-6-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-XS-Should-have-6-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 6 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(5).text().trim() == "Column 6"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 6 Column Layout in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.303 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl6"
def selectorContainer = "#contentblock6 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 6 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 6
takeScreenshot($(selector).firstElement(), "Should have 6 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-SM-Should-have-6-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-SM-Should-have-6-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 6 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(5).text().trim() == "Column 6"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 6 Column Layout in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.001 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl6"
def selectorContainer = "#contentblock6 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 6 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 6
takeScreenshot($(selector).firstElement(), "Should have 6 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-MD-Should-have-6-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-MD-Should-have-6-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 6 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(5).text().trim() == "Column 6"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 6 Column Layout in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.750 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl6"
def selectorContainer = "#contentblock6 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 6 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 6
takeScreenshot($(selector).firstElement(), "Should have 6 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-LG-Should-have-6-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-LG-Should-have-6-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 6 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(5).text().trim() == "Column 6"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 6 Column Layout in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.547 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl6"
def selectorContainer = "#contentblock6 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 6 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 6
takeScreenshot($(selector).firstElement(), "Should have 6 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-XLG-Should-have-6-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-XLG-Should-have-6-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 6 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(5).text().trim() == "Column 6"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default using 6 Column Layout in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 3.291 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl6"
def selectorContainer = "#contentblock6 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 6 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 6
takeScreenshot($(selector).firstElement(), "Should have 6 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-XXLG-Should-have-6-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-using-6-Column-Layout-in-XXLG-Should-have-6-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 6 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(5).text().trim() == "Column 6"
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with 5 Column Layout Varied Width in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.166 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl7"
def selectorContainer = "#contentblock7 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-XS-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-XS-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 1 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(0).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 2 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(1).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 3 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(2).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 4 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(3).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 5 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(4).attr("class").contains("col-md-2")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with 5 Column Layout Varied Width in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.220 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl7"
def selectorContainer = "#contentblock7 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-SM-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-SM-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 1 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(0).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 2 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(1).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 3 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(2).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 4 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(3).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 5 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(4).attr("class").contains("col-md-2")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with 5 Column Layout Varied Width in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.582 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl7"
def selectorContainer = "#contentblock7 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-MD-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-MD-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 1 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(0).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 2 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(1).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 3 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(2).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 4 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(3).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 5 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(4).attr("class").contains("col-md-2")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with 5 Column Layout Varied Width in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.811 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl7"
def selectorContainer = "#contentblock7 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-LG-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-LG-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 1 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(0).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 2 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(1).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 3 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(2).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 4 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(3).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 5 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(4).attr("class").contains("col-md-2")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with 5 Column Layout Varied Width in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.834 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl7"
def selectorContainer = "#contentblock7 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-XLG-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-XLG-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 1 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(0).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 2 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(1).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 3 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(2).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 4 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(3).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 5 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(4).attr("class").contains("col-md-2")
----

| 
|====

* **Where:** 

=====

=== Functionality of Component Variant: Default with 5 Column Layout Varied Width in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.646 seconds

* **Given:** >the page hierarchy is created as "Components" > "Content" > "Columns"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl7"
def selectorContainer = "#contentblock7 .contents"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 5 column

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm").size() == 5
takeScreenshot($(selector).firstElement(), "Should have 5 column")
----

a|  .Current
image:../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-XXLG-Should-have-5-column.png[width="95%",pdfwidth="100%",scaledwidth="95%",link="../../../remote-seleniumhub-chrome/test-screenshots/RemoteWebDriver/specs/component/layout/columns/ColumnsPublishSpec/Functionality-of-Component-Variant-Default-with-5-Column-Layout-Varied-Width-in-XXLG-Should-have-5-column.png"]

|====

* **And** Column 1 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(0).text().trim() == "Column 1"
----

| 
|====

* **And** Column 1 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(0).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 2 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(1).text().trim() == "Column 2"
----

| 
|====

* **And** Column 2 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(1).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 3 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(2).text().trim() == "Column 3"
----

| 
|====

* **And** Column 3 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(2).attr("class").contains("col-md-2")
----

| 
|====

* **And** Column 4 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(3).text().trim() == "Column 4"
----

| 
|====

* **And** Column 4 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(3).attr("class").contains("col-md-3")
----

| 
|====

* **And** Column 5 should have sample content

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
$("${selector} .row .col-sm [component].text").getAt(4).text().trim() == "Column 5"
----

| 
|====

* **And** Column 5 should have custom width

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $("${selector} .row .col-sm").getAt(4).attr("class").contains("col-md-2")
----

| 
|====

* **Where:** 

=====

=== Functionality of ColCtrl with 2 Column Multi Breakpoints MD and LG (3,9 and 9,3) in XS **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.978 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Content Block > ColCtrl"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl9"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 columns

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").size() == 2
----

| 
|====

* **And** First item should match the structure and contain classes col-md-3 col-lg-9

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(0).attr("class").contains("col-md-3 col-lg-9")
----

| 
|====

* **And** Second item should match the structure and contain classes col-md-9 col-lg-3

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(1).attr("class").contains("col-md-9 col-lg-3")
----

| 
|====

* **Where:** 

=====

=== Functionality of ColCtrl with 2 Column Multi Breakpoints MD and LG (3,9 and 9,3) in SM **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.899 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Content Block > ColCtrl"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl9"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 columns

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").size() == 2
----

| 
|====

* **And** First item should match the structure and contain classes col-md-3 col-lg-9

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(0).attr("class").contains("col-md-3 col-lg-9")
----

| 
|====

* **And** Second item should match the structure and contain classes col-md-9 col-lg-3

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(1).attr("class").contains("col-md-9 col-lg-3")
----

| 
|====

* **Where:** 

=====

=== Functionality of ColCtrl with 2 Column Multi Breakpoints MD and LG (3,9 and 9,3) in MD **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.103 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Content Block > ColCtrl"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl9"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 columns

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").size() == 2
----

| 
|====

* **And** First item should match the structure and contain classes col-md-3 col-lg-9

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(0).attr("class").contains("col-md-3 col-lg-9")
----

| 
|====

* **And** Second item should match the structure and contain classes col-md-9 col-lg-3

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(1).attr("class").contains("col-md-9 col-lg-3")
----

| 
|====

* **Where:** 

=====

=== Functionality of ColCtrl with 2 Column Multi Breakpoints MD and LG (3,9 and 9,3) in LG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 2.606 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Content Block > ColCtrl"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl9"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 columns

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").size() == 2
----

| 
|====

* **And** First item should match the structure and contain classes col-md-3 col-lg-9

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(0).attr("class").contains("col-md-3 col-lg-9")
----

| 
|====

* **And** Second item should match the structure and contain classes col-md-9 col-lg-3

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(1).attr("class").contains("col-md-9 col-lg-3")
----

| 
|====

* **Where:** 

=====

=== Functionality of ColCtrl with 2 Column Multi Breakpoints MD and LG (3,9 and 9,3) in XLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.951 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Content Block > ColCtrl"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl9"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 columns

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").size() == 2
----

| 
|====

* **And** First item should match the structure and contain classes col-md-3 col-lg-9

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(0).attr("class").contains("col-md-3 col-lg-9")
----

| 
|====

* **And** Second item should match the structure and contain classes col-md-9 col-lg-3

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(1).attr("class").contains("col-md-9 col-lg-3")
----

| 
|====

* **Where:** 

=====

=== Functionality of ColCtrl with 2 Column Multi Breakpoints MD and LG (3,9 and 9,3) in XXLG **PASS** [big]#icon:check-circle[role="green"]#

=====



Result: **PASS** [big]#icon:check-circle[role="green"]#
Time: 1.925 seconds

* **Given:** >the page hierarchy is created as "Components" > "Layout" > "Content Block > ColCtrl"

* **And** >I am in the component showcase page

* **And** >the component is on the showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def selector = "#colctrl9"
----

| 
|====

* **When** I am on the component showcase page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
setWindowSize(viewport)
waitForAuthorPreviewPage()
----

| 
|====

* **Then** The component should be on the page

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
def component = waitForComponent(selector)
----

| 
|====

* **And** Should have 2 columns

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").size() == 2
----

| 
|====

* **And** First item should match the structure and contain classes col-md-3 col-lg-9

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(0).attr("class").contains("col-md-3 col-lg-9")
----

| 
|====

* **And** Second item should match the structure and contain classes col-md-9 col-lg-3

[cols="2,1"]
|====

a|[source,groovy,linenums]
----
assert $(selector + " .parsys_column .col-sm").getAt(1).attr("class").contains("col-md-9 col-lg-3")
----

| 
|====

* **Where:** 

=====

