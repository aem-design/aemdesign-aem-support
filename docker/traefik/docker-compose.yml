version: "2.4"

services:

  traefik:
    image: traefik
    extends:
      file: ../common/config-tz.yml
      service: config
    security_opt:
      - no-new-privileges:true
    restart: "always"
    command:
      - "--log.level=ERROR"
      - "--accesslog=true"
      - "--api.insecure=true" # Don't do that in production!
      - "--api.dashboard=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--global.sendAnonymousUsage=true"


      # Entrypoints for HTTP, HTTPS, and NX (TCP + UDP)
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entryPoint.permanent=true"

      # Manual keys
      - --providers.file.directory=/etc/traefik/dynamic_conf

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Persist certificates, so we can restart as often as needed
      - ./certs:/letsencrypt
      - ./config/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro

    networks:
      - seleniumgrid
      - author-network
      - publish-network
      - dispatcher-network
      - default
      - internal

  createcert:
    image: brunopadz/mkcert-docker
    extends:
      file: ../common/config-tz.yml
      service: config
    working_dir: /root/.local/share/mkcert
    command:
      - /bin/sh
      - -c
      - "test ! -f mkcert.key && mkcert -install && mkcert -key-file mkcert.key -cert-file mkcert.pem -client author.localhost publish.localhost dispatcher.localhost localhost 127.0.0.1 ::1"
    volumes:
      - ./certs:/root/.local/share/mkcert

  createcertpkcs12:
    image: frapsoft/openssl
    extends:
      file: ../common/config-tz.yml
      service: config
    working_dir: /export
    entrypoint: ""
    command:
      - /bin/ash
      - -c
      - "test ! -f mkcert.pfx && openssl pkcs12 -export -out mkcert.pfx -in mkcert.pem -inkey mkcert.key -certfile rootCA.pem -passout pass:123"
    volumes:
      - ./certs:/export


networks:
  internal:
  seleniumgrid:
  author-network:
  publish-network:
  dispatcher-network:

