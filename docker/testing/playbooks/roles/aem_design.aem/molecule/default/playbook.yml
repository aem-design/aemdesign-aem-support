---
- name: Converge
  hosts: instance
  gather_facts: true
  become: true
  vars:
    local_role_name: "ansible-role-aem"
    role_name: "{% if lookup('env','ROLE_NAME_FULL') %}{{ lookup('env','ROLE_NAME_FULL') }}{% else %}{{ local_role_name }}{% endif %}"
    test_container_name: "aemtest"
    aem_access_port: "5502"
    aem_access_host: "{{ dockerhost_ip.stdout }}"
    test_debug_hide: true


  pre_tasks:
    - name: get docker host ip
      become: true
      shell: |
        set -o pipefail
        /sbin/ip route | awk '/default/ { print $3 }'
      args:
        executable: /bin/bash
      register: dockerhost_ip
      changed_when: false

  tasks:
    - name: run aem author istance
      include_role:
        name: "{{ role_name }}"
      vars:
        docker_published_ports: [
          "5502:8080"
        ]
        docker_volumes: []
        docker_container_name: "{{ test_container_name }}"
        debug_hide: "{{ test_debug_hide }}"
        docker_host: "unix://tmp/docker.sock"
    - name: ensure container is registered
      include_role:
        name: aem_design.aem_license
      vars:
        aem_license_key: "{{ service_aem_license_key }}"
        aem_license_name: "{{ service_aem_license_name }}"
        aem_port: "{{ aem_access_port }}"
        aem_host: "{{ aem_access_host }}"
        debug_hide: "{{ test_debug_hide }}"
    - name: ensure instance is ready
      include_role:
        name: aem_design.aem_verify
      vars:
        aem_port: "{{ aem_access_port }}"
        aem_host: "{{ aem_access_host }}"
        debug_hide: "{{ test_debug_hide }}"
    - name: install aem packages
      include_role:
        name: aem_design.aem_package
      vars:
        aem_port: "{{ aem_access_port }}"
        aem_host: "{{ aem_access_host }}"
        maven_repository_url: "{{ item.maven_repository_url | default('') }}"
        debug_hide: "{{ test_debug_hide }}"
        simple_name: "{{ item.simple_name }}"
        group_name: "{{ item.group_name }}"
        package_version: "{{ item.package_version }}"
        package_name: "{{ item.package_name }}"
        package_url: "{{ item.package_url }}"
        file_name: "{{ item.file_name }}"
        file_url_username: "{{ item.file_url_username | default('') }}"
        file_url_password: "{{ item.file_url_password | default('') }}"
        install_package_ansible: "{{ item.install_package_ansible }}"
        install_package_docker: "{{ item.install_package_docker }}"
        docker_host: "{{ item.docker_host }}"
      loop: [
        {
          debug_hide: "false",
          simple_name: "acs twitter using docker",
          group_name: "day_internal/consulting",
          package_version: "1.0.0",
          package_name: "com.adobe.acs.bundles.twitter4j-content",
          package_url: "https://github.com/Adobe-Consulting-Services/com.adobe.acs.bundles.twitter4j/\
                          releases/download/com.adobe.acs.bundles.twitter4j-1.0.0/com.adobe.acs.bundles.twitter4j-content-1.0.0.zip",
          file_name: "com.adobe.acs.bundles.twitter4j-content-1.0.0.zip",
          install_package_ansible: true,
          install_package_docker: false,
          docker_host: "unix://tmp/docker.sock"
        }
      ]
