language: java
sudo: false
cache:
  directories:
    - '$HOME/.m2/repository'

git:
  depth: false

addons:
  apt:
    packages:
      - python36

## export GPG details
before_install:
  - echo SWTICH TO PYTHON3
  - pyenv install 3.6.3
  - pyenv global 3.6.3
  - echo TRAVIS_BRANCH=$TRAVIS_BRANCH
  - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
  - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
  - mvn clean -DskipTests=true -Dgpg.skip -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -B -P all-modules -q && echo "CLEAN DONE"
  - mvn package -DskipTests=true -Dgpg.skip -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -B -P all-modules && echo "PACKAGE AND LOCAL INSTALL DONE"
  - find . -type d -name target | xargs -n 1 -t  sh -c 'ls -latr $0'
  - if [[ $TRAVIS_BRANCH == "master" && $SONAR_ENABLED == "true" ]]; then mvn sonar:sonar -P all-modules -q "-Dsonar.branch.name=${TRAVIS_BRANCH}" "-Dsonar.host.url=${SONAR_URL}" "-Dsonar.login=${SONAR_TOKEN}" "-Dsonar.organization=${SONAR_ORGANISATION}" && echo "SONAR ON ${TRAVIS_BRANCH} DONE"; fi
  - if [[ $TRAVIS_BRANCH != "master" && $SONAR_ENABLED == "true" ]]; then mvn sonar:sonar -P all-modules -q "-Dsonar.branch.name=${TRAVIS_BRANCH}" "-Dsonar.branch.target=master" "-Dsonar.host.url=${SONAR_URL}" "-Dsonar.login=${SONAR_TOKEN}" "-Dsonar.organization=${SONAR_ORGANISATION}" && echo "SONAR ON ${TRAVIS_BRANCH} DONE"; fi
  - export GIT_RELEASE_NOTES="$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h - %s (%an)")"
  - echo "READY"
  - declare -a REPO_SLUG_ARRAY="(${TRAVIS_REPO_SLUG/\// })"

install:
  - ./automation-testing

## Build and release to maven central
script:
  - if [[ $TRAVIS_BRANCH == "master" ]]; then mvn clean deploy --settings default.xml -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests=true -B -P release; fi

## Get the project version
before_deploy:
  - export CURRENT_VERSION=$(mvn help:evaluate -q -DforceStdout -Dexpression=project.version)
  - echo CURRENT_VERSION=$CURRENT_VERSION
  - export TRAVIS_TAG=$CURRENT_VERSION
  - if [[ $TRAVIS_BRANCH == "master" ]]; then git tag $TRAVIS_TAG; fi

## Create release in GitHub
deploy:
  - provider: releases
    api_key: $GITHUB_TOKEN
    file:
      - aemdesign-aem-support-deploy/target/aemdesign-aem-support-deploy-$CURRENT_VERSION.zip
      - aemdesign-aem-compose/target/aemdesign-aem-compose-$CURRENT_VERSION.zip
      - aemdesign-aem-showcase/target/aemdesign-aem-showcase-$CURRENT_VERSION.zip
      - aemdesign-aem-training/target/aemdesign-aem-training-$CURRENT_VERSION.zip
      - aemdesign-aem-content/target/aemdesign-aem-content-$CURRENT_VERSION.zip
      - aemdesign-aem-config/target/aemdesign-aem-config-$CURRENT_VERSION.zip
    skip_cleanup: true
    tag_name: $CURRENT_VERSION
    name: $CURRENT_VERSION
    target_commitish: $TRAVIS_COMMIT
    body: $GIT_RELEASE_NOTES
    on:
      branch: master
  - provider: script
    script: if [[ $TRAVIS_BRANCH == "master" ]]; then bash docker run --rm aemdesign/travis-trigger-build sbb --github_user=${REPO_SLUG_ARRAY[0]} --github_repo=aem --github_branch=6.5.0-bundle --travis_token=${TRAVIS_TOKEN}; fi
  - provider: script
    script: if [[ $TRAVIS_BRANCH == "master" ]]; then bash docker run --rm aemdesign/travis-trigger-build sbb --github_user=${REPO_SLUG_ARRAY[0]} --github_repo=aem --github_branch=6.4.0-bundle --travis_token=${TRAVIS_TOKEN}; fi
  - provider: pages
    local_dir: aemdesign-testing/remote-seleniumhub-chrome
    skip_cleanup: true
    github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
    keep_history: true
    on:
      branch: master

#notifications:
#  email: false
#  slack:
#    secure: $SLACK_TOKEN



after_failure:
  - find . -type d -name target | xargs -n 1 -t  sh -c 'ls -latr $0'
